HTTP(HyperText Transfer Protocol) 프로토콜
- 서버와 클라이언트가 인터넷 상에서 데이터를 주고 받기 위한 프로토콜(protocol), 무상태 프로토콜
- 불특정 다수를 대상으로 하는 서비스에는 적합하다.
-  클라이언트와 서버가 계속 연결된 형태가 아니기에 최대 연결 수보다 훨씬 많은 요청과 응답을 처리할 수 있다.
- 연결을 끊어서 클라이언트의 이전 상황을 알 수 없는 상태(무상태, Stateless)-> 정보 유지를 위해 Cookie기술등장




URL(Uniform Resource Locator)
- 인터넷 상의 자원의 위치
- 특정 웹서버의 특정 파일에 접근하기 위한 경로
http(접근 프로토콜)://IP주소 또는 도메인, 포트번호/문서경로/문서이름




1. 클라이언트가 원하는 서버에 접속(connect)

2. 클라이언트가 요청(request)
- 요청 데이터 포맷
헤더부분, 빈줄 부분, 요청 바디 부분으로 나눠진다.
헤더 부분 : 요청 메서드/요청URI(자원의 위치)/http프로토콜의 버전
	헤더 명과 헤더 값이 콜론으로 구분되어져 있다.
	라인피드와 캐리지 리턴으로 구분됨.

3. 서버가 요청에 따른 응답 결과를 응답해줌(response)
- 응답 데이터 포맷
응답헤더, 빈줄, 응답바디
응답헤더 : 응답HTTP프로토콜의 버전/응답코드/응답 메시지
	날짜, 웹서버이름과 버전, 콘텐츠 타입, 캐시제어방식

4. 연결 끊김(close)




요청메서드
- GET : SELECT 정보 요청, 요청 바디가 없다.
- POST : INSERT 정보 넣기
- PUT : UPDATE 업데이트
- DELETE : DELETE 삭제
- HEAD : 헤더 정보 요청, 해당 자원 존재 및 서버 에러 여부 확인
- OPTIONS : 웹서버가 지원하는 메서드 종류 요청
- TRACE : 클라이언트의 요청을 반환


인터넷?
- 한 컴퓨터에 여러 서버가 있고, 각각의 서버들은 포트로 구분돼서 동작 
- 네트워크들의 결합체, TCP/IP
WWW(프로토콜 HTTP, 포트번호 80, 기능 웹)
Email(SMTP/POP3/IMAP, 25/110/114, 이메일)
FTP(FTP, 21, 파일전송)
DNS(TCP/UDP, 53, 네임서비스)
NEWS(NNTP, 119, 인터넷 뉴스 서비스)



HTTPS?
- HTTP프로토콜의 문제점인 정보의 암호화를 위해 SSL(보안소켓계층)을 사용한다.
- 전송되는 데이터가 암호화 된다.
- 암호화/복호화의 과정이 필요하기 때문에 비교적 속도가 느리고 인증서를 발급하고 유지를 위한 비용이 발생한다.
